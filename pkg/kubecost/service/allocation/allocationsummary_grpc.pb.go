// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.4
// source: allocation/allocationsummary.proto

package allocationsummary

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AllocationSummaryClient is the client API for AllocationSummary service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AllocationSummaryClient interface {
	// Obtains the AllocationSummarySets satisfy the given AllocationSummaryRequest. Results are
	// streamed rather than returned at once.
	GetAllocationSummary(ctx context.Context, in *AllocationSummaryRequest, opts ...grpc.CallOption) (AllocationSummary_GetAllocationSummaryClient, error)
}

type allocationSummaryClient struct {
	cc grpc.ClientConnInterface
}

func NewAllocationSummaryClient(cc grpc.ClientConnInterface) AllocationSummaryClient {
	return &allocationSummaryClient{cc}
}

func (c *allocationSummaryClient) GetAllocationSummary(ctx context.Context, in *AllocationSummaryRequest, opts ...grpc.CallOption) (AllocationSummary_GetAllocationSummaryClient, error) {
	stream, err := c.cc.NewStream(ctx, &AllocationSummary_ServiceDesc.Streams[0], "/kubecost.service.allocation.allocationsummary.AllocationSummary/GetAllocationSummary", opts...)
	if err != nil {
		return nil, err
	}
	x := &allocationSummaryGetAllocationSummaryClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AllocationSummary_GetAllocationSummaryClient interface {
	Recv() (*AllocationSummaryResponse, error)
	grpc.ClientStream
}

type allocationSummaryGetAllocationSummaryClient struct {
	grpc.ClientStream
}

func (x *allocationSummaryGetAllocationSummaryClient) Recv() (*AllocationSummaryResponse, error) {
	m := new(AllocationSummaryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AllocationSummaryServer is the server API for AllocationSummary service.
// All implementations must embed UnimplementedAllocationSummaryServer
// for forward compatibility
type AllocationSummaryServer interface {
	// Obtains the AllocationSummarySets satisfy the given AllocationSummaryRequest. Results are
	// streamed rather than returned at once.
	GetAllocationSummary(*AllocationSummaryRequest, AllocationSummary_GetAllocationSummaryServer) error
	mustEmbedUnimplementedAllocationSummaryServer()
}

// UnimplementedAllocationSummaryServer must be embedded to have forward compatible implementations.
type UnimplementedAllocationSummaryServer struct {
}

func (UnimplementedAllocationSummaryServer) GetAllocationSummary(*AllocationSummaryRequest, AllocationSummary_GetAllocationSummaryServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAllocationSummary not implemented")
}
func (UnimplementedAllocationSummaryServer) mustEmbedUnimplementedAllocationSummaryServer() {}

// UnsafeAllocationSummaryServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AllocationSummaryServer will
// result in compilation errors.
type UnsafeAllocationSummaryServer interface {
	mustEmbedUnimplementedAllocationSummaryServer()
}

func RegisterAllocationSummaryServer(s grpc.ServiceRegistrar, srv AllocationSummaryServer) {
	s.RegisterService(&AllocationSummary_ServiceDesc, srv)
}

func _AllocationSummary_GetAllocationSummary_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AllocationSummaryRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AllocationSummaryServer).GetAllocationSummary(m, &allocationSummaryGetAllocationSummaryServer{stream})
}

type AllocationSummary_GetAllocationSummaryServer interface {
	Send(*AllocationSummaryResponse) error
	grpc.ServerStream
}

type allocationSummaryGetAllocationSummaryServer struct {
	grpc.ServerStream
}

func (x *allocationSummaryGetAllocationSummaryServer) Send(m *AllocationSummaryResponse) error {
	return x.ServerStream.SendMsg(m)
}

// AllocationSummary_ServiceDesc is the grpc.ServiceDesc for AllocationSummary service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AllocationSummary_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "kubecost.service.allocation.allocationsummary.AllocationSummary",
	HandlerType: (*AllocationSummaryServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetAllocationSummary",
			Handler:       _AllocationSummary_GetAllocationSummary_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "allocation/allocationsummary.proto",
}
